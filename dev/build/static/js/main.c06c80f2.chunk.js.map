{"version":3,"sources":["components/ProjectName.js","components/SearchForm.js","components/ShowPosts.js","components/Pagination.js","components/LoadData.js","components/LoadClient.js","App.js","index.js"],"names":["ProjName","projectName","document","title","align","SearchForm","setPageNr","setSearchQry","style","textAlign","onSubmit","e","preventDefault","target","value","prev","console","log","alert","type","autoFocus","placeholder","ShowPosts","loading","dataArray","totPosts","searchQry","key","className","margin","width","fill","borderradius","count","map","post","href","url","rel","author","Pagination","totPages","pageNr","useState","pg","setPg","prevBtn","createRef","nextBtn","handleKeyDown","event","code","pgBtn","useEffect","addEventListener","removeEventListener","bool","changePage","Number","id","min","step","max","defaultValue","onPointerUp","onKeyUp","onChange","focus","ref","onClick","ShowData","Object","keys","length","LoadClient","clientUrl","setDataArray","setLoading","setTotPages","setTotPosts","loadError","getData","a","axios","get","response","status","Error","data","hits","nbPages","nbHits","message","App","process","undefined","LoadData","rootElement","getElementById","window","location","pathname","substring","lastIndexOf","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c06c80f2.chunk.js","sourcesContent":["export default function ProjName({ projectName }) {\r\n  //const projectName = process.env.REACT_APP_PROJECT_NAME;\r\n  document.title = projectName;\r\n  return (\r\n    <h2 align=\"center\">\r\n      {' '}\r\n      - &#9887; &emsp; &#9958; &emsp;\r\n      <u>{projectName}</u> &emsp; &#9957; &emsp; &#9886; -\r\n    </h2>\r\n  );\r\n}\r\n","const SearchForm = ({ setPageNr, setSearchQry }) => {\r\n  const searchIt = (e) => {\r\n    e.preventDefault();\r\n    //console.log(e.target[0].value);                                             // check\r\n    if (e.target[0].value) {\r\n      setSearchQry(e.target[0].value);\r\n      setPageNr((prev) => [1 - prev[1], prev[1]]);\r\n      console.log(e.target[0].value); // check\r\n    } else {\r\n      alert('Please enter something to search for!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form style={{ textAlign: 'center' }} onSubmit={searchIt}>\r\n      <input type=\"text\" autoFocus placeholder=\"enter a query here\"></input>\r\n      &nbsp;<button>Search</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import { BeatLoading } from 'respinner';\r\n//  , BounceLoading, CircularLoading, ClockLoading, RotateLoading, SpinLoading, WaveLoading, DashLoading, CopperLoading\r\n//       <SpinLoading fill=\"#777\" borderRadius={4} count={12} /> // use with customized props\r\n//       <CircularLoading /> // or just use with default props\r\n//----------------------------------------------------------\r\n\r\nconst ShowPosts = ({ loading, dataArray, totPosts, searchQry }) => {\r\n  //console.log(\"Showposts:\",dataArray)                                       //check\r\n  // use a unique \"key\" from the dataArray ??\r\n  let key = 0;\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"Loading\"\r\n        style={{ margin: 'auto', textAlign: 'center', width: '90%' }}\r\n      >\r\n        {loading ? (\r\n          <>\r\n            <small className=\"tiny\">Loading Data: </small>\r\n            <BeatLoading fill=\"white\" borderradius={8} count={35} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <small>\r\n              Found {totPosts} total posts\r\n              {searchQry ? ` for \"${searchQry}\"` : ' ( - not searched - )'}\r\n            </small>\r\n            <ol>\r\n              {dataArray.map((post) => (\r\n                <li key={key++}>\r\n                  <a href={post.url} target=\"_blank\" rel=\"noreferrer\">\r\n                    {post.title}\r\n                  </a>\r\n                  <br></br>\r\n                  <small>\r\n                    <i>by {post.author}</i>\r\n                  </small>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowPosts;\r\n","import { useState, createRef, useEffect } from 'react';\r\n\r\nconst Pagination = ({ totPages, pageNr, setPageNr }) => {\r\n  //console.log(pageNr[0], totPages); // check\r\n  const [pg, setPg] = useState(pageNr[0] + pageNr[1]);\r\n\r\n  const prevBtn = createRef();\r\n  const nextBtn = createRef();\r\n  const handleKeyDown = (event) => {\r\n    //console.log(`Key: ${event.key}  has been pressed`); // check\r\n    if (event.code === 'ArrowLeft') pgBtn(false);\r\n    if (event.code === 'ArrowRight') pgBtn(true);\r\n    if (event.code === 'Home') {\r\n      setPageNr((prev) => [0 + prev[1], prev[1]]);\r\n      setPg(1);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => document.removeEventListener('keydown', handleKeyDown);\r\n    //                                                              eslint-disable-next-line\r\n  }, []);\r\n\r\n  const pgBtn = (bool) => {\r\n    if (bool) {\r\n      console.log('test2', bool, pageNr[0], totPages); // check\r\n      if (pageNr[0] < totPages - pageNr[1]) {\r\n        setPageNr((prev) => [prev[0] + 1, prev[1]]);\r\n        setPg((prev) => prev + 1);\r\n        console.log('true', bool, pageNr[0], totPages); // check\r\n      }\r\n    } else if (pageNr[0] >= pageNr[1]) {\r\n      setPageNr((prev) => [prev[0] - 1, prev[1]]);\r\n      setPg((prev) => prev - 1);\r\n      console.log('false', bool, pageNr[0], totPages); // check\r\n    }\r\n  };\r\n\r\n  const changePage = (e) => {\r\n    e.preventDefault();\r\n    setPageNr((prev) => (pageNr = [Number(e.target.value) - prev[1], prev[1]]));\r\n    setPg((prev) => pageNr[0] + pageNr[1]);\r\n    //console.log(\"Pagination:\",pageNr);                                       //check\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: 'auto', textAlign: 'center', width: '90%' }}>\r\n      <form style={{ textAlign: 'center' }}>\r\n        <small>\r\n          Page: {pg} of {totPages}\r\n        </small>\r\n        <br />\r\n        <input\r\n          id=\"pgRange\"\r\n          style={{ width: totPages > 40 ? '80%' : '40%' }}\r\n          type=\"range\"\r\n          min=\"1\"\r\n          step=\"1\"\r\n          max={totPages}\r\n          defaultValue={pg}\r\n          onPointerUp={(e) => changePage(e)}\r\n          onKeyUp={(e) => changePage(e)}\r\n          onChange={(e) => {\r\n            setPg(Number(e.target.value));\r\n            e.target.focus();\r\n          }}\r\n        ></input>\r\n      </form>\r\n      <button id=\"prev\" ref={prevBtn} onClick={() => pgBtn(false)}>\r\n        {'Prev <<'}\r\n      </button>\r\n      <button id=\"next\" ref={nextBtn} onClick={() => pgBtn(true)}>\r\n        {' >> Next'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import SearchForm from './SearchForm';\r\nimport ShowPosts from './ShowPosts';\r\nimport Pagination from './Pagination';\r\n\r\nconst ShowData = ({\r\n  loading,\r\n  dataArray,\r\n  totPages,\r\n  pageNr,\r\n  setPageNr,\r\n  setSearchQry,\r\n  totPosts,\r\n  searchQry\r\n}) => {\r\n  //console.log(dataArray)                                                          //check\r\n\r\n  return (\r\n    <>\r\n      <SearchForm setPageNr={setPageNr} setSearchQry={setSearchQry} />\r\n\r\n      {Object.keys(dataArray).length > 0 ? (\r\n        <>\r\n          <Pagination\r\n            totPages={totPages}\r\n            pageNr={pageNr}\r\n            setPageNr={setPageNr}\r\n          />\r\n          <br />\r\n          <ShowPosts\r\n            loading={loading}\r\n            dataArray={dataArray}\r\n            totPosts={totPosts}\r\n            searchQry={searchQry}\r\n          />\r\n        </>\r\n      ) : (\r\n        <p style={{ textAlign: 'center' }}>\r\n          {' '}\r\n          ... No search results returned ...{' '}\r\n        </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ShowData;\r\n","import axios from 'axios';\r\n\r\nconst LoadClient = ({\r\n  clientUrl,\r\n  dataArray,\r\n  setDataArray,\r\n  setLoading,\r\n  setTotPages,\r\n  setTotPosts\r\n}) => {\r\n  //console.log(clientUrl, dataArray)                                             // check\r\n  let loadError = null;\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      //console.log(`Url: ${clientUrl}`);                                       // check\r\n      const response = await axios.get(`${clientUrl}`);\r\n      //console.log(response.status);                                           // check\r\n      if (!response.status) {\r\n        throw Error('Couldnt get data.');\r\n      } else {\r\n        //console.log(\"got response1:\",response.data);                         // check\r\n        setDataArray(response.data.hits);\r\n        setTotPages(response.data.nbPages);\r\n        setTotPosts(response.data.nbHits);\r\n        //console.log(\"got response2:\", response.data.page, dataArray);        // check\r\n      }\r\n    } catch (e) {\r\n      loadError = e;\r\n      alert(`${e.message} :( ... click ok to retry `);\r\n      // alert(`${e.message} :( ... retrying loop every 10sec `)\r\n      // setTimeout( () => setState({...state, loadError: null }), 10000);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  !loadError && getData();\r\n};\r\n\r\nexport default LoadClient;\r\n","// \"start\": \"react-scripts --openssl-legacy-provider start\",\n// https://react-bootstrap.github.io/components/alerts/\n// import \"bootswatch/dist/[theme]/bootstrap.min.css\"; -- Theme: spacelab -- is linked in index.html!!\n//----------------------------------------------------------\nimport React, { useState, useEffect } from 'react';\n//----------------------------------------------------------\nimport ProjName from './components/ProjectName';\nimport LoadData from './components/LoadData';\nimport LoadClient from './components/LoadClient';\n//----------------------------------------------------------\nimport './styles.css';\n\nconst App = () => {\n  //--------------------------------------------------------\n  const [dataArray, setDataArray] = useState(['Await data...']);\n  const [searchQry, setSearchQry] = useState('');\n  const [totPages, setTotPages] = useState(0);\n  const [totPosts, setTotPosts] = useState(0);\n  const [pageNr, setPageNr] = useState([0, 1]); // 0,1  or  1,0  only  (check api initial page)\n  const [loading, setLoading] = useState(false);\n  //const [clientUrl, setClientUrl]  = useState(`https://hn.algolia.com/api/v1/search?query=${searchQry}&tags=story&${hitsPerPg}&page=${pageNr[0]}`);\n\n  //local variables ---------------------------------\n  const hitsPerPg = 'hitsPerPage=20';\n  const clientUrl = `https://hn.algolia.com/api/v1/search?query=${searchQry}&tags=story&${hitsPerPg}&page=${pageNr[0]}`;\n\n  useEffect(() => {\n    //console.log(clientUrl, dataArray)                                             // check\n    LoadClient({\n      clientUrl,\n      dataArray,\n      setDataArray,\n      setLoading,\n      setTotPages,\n      setTotPosts\n    });\n    //                                                                eslint-disable-next-line\n  }, [clientUrl, searchQry, pageNr[0]]); //\n\n  //-------------------------------------------------\n  return (\n    <div className=\"App\">\n      <ProjName projectName={process.env.REACT_APP_PROJECT_NAME} />\n\n      {dataArray === undefined ? (\n        <div>... this is my REACT boilerplate ...</div>\n      ) : (\n        <LoadData\n          loading={loading}\n          dataArray={dataArray}\n          totPages={totPages}\n          pageNr={pageNr}\n          setPageNr={setPageNr}\n          setSearchQry={setSearchQry}\n          totPosts={totPosts}\n          searchQry={searchQry}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\n\nlet urlBase = window.location.pathname.substring(0, window.location.pathname.lastIndexOf(\"/\") + 1);\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}